
//! Autogenerated weights for `pallet_domains`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 46.2.0
//! DATE: 2025-08-02, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `protocol-team-testing`, CPU: `AMD Ryzen 5 3600 6-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/production/subspace-node
// benchmark
// pallet
// --runtime=./target/production/wbuild/subspace-runtime/subspace_runtime.compact.compressed.wasm
// --extrinsic=*
// --wasm-execution=compiled
// --genesis-builder=none
// --heap-pages=4096
// --steps=50
// --repeat=20
// --pallet=pallet_domains
// --output=./crates/subspace-runtime/src/weights/pallet_domains.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_domains`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_domains::WeightInfo for WeightInfo<T> {
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:1)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::NewAddedHeadReceipt` (r:1 w:1)
	/// Proof: `Domains::NewAddedHeadReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:1)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ExecutionInbox` (r:4 w:1)
	/// Proof: `Domains::ExecutionInbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingSlashes` (r:1 w:0)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InvalidBundleAuthors` (r:1 w:1)
	/// Proof: `Domains::InvalidBundleAuthors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:2 w:2)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::DomainBlockPruningDepth` (r:1 w:0)
	/// Proof: `RuntimeConfigs::DomainBlockPruningDepth` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Domains::BlockTreeNodes` (r:1 w:2)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::DomainBalances` (r:1 w:1)
	/// Proof: `Transporter::DomainBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRuntimeUpgradeRecords` (r:1 w:0)
	/// Proof: `Domains::DomainRuntimeUpgradeRecords` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::SuccessfulBundles` (r:1 w:1)
	/// Proof: `Domains::SuccessfulBundles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:1)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorBundleSlot` (r:1 w:1)
	/// Proof: `Domains::OperatorBundleSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InboxedBundleAuthor` (r:0 w:1)
	/// Proof: `Domains::InboxedBundleAuthor` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ConsensusBlockHash` (r:0 w:1)
	/// Proof: `Domains::ConsensusBlockHash` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_bundle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1875`
		//  Estimated: `12765`
		// Minimum execution time: 138_827_000 picoseconds.
		Weight::from_parts(144_787_000, 0)
			.saturating_add(Weight::from_parts(0, 12765))
			.saturating_add(T::DbWeight::get().reads(21))
			.saturating_add(T::DbWeight::get().writes(16))
	}
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:1)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTreeNodes` (r:1 w:0)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_fraud_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1071`
		//  Estimated: `4536`
		// Minimum execution time: 29_459_000 picoseconds.
		Weight::from_parts(30_810_000, 0)
			.saturating_add(Weight::from_parts(0, 4536))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Domains::BlockTree` (r:1 w:1)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTreeNodes` (r:1 w:1)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:100 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:100 w:100)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingSlashes` (r:1 w:1)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 100]`.
	fn handle_bad_receipt(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `967 + n * (192 ±0)`
		//  Estimated: `4432 + n * (2667 ±0)`
		// Minimum execution time: 49_619_000 picoseconds.
		Weight::from_parts(51_119_000, 0)
			.saturating_add(Weight::from_parts(0, 4432))
			// Standard Error: 37_533
			.saturating_add(Weight::from_parts(15_147_567, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(4))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2667).saturating_mul(n.into()))
	}
	/// Storage: `Domains::Operators` (r:200 w:100)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:100 w:100)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingSlashes` (r:1 w:1)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::AccumulatedTreasuryFunds` (r:1 w:1)
	/// Proof: `Domains::AccumulatedTreasuryFunds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 100]`.
	/// The range of component `s` is `[0, 100]`.
	fn confirm_domain_block(n: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + n * (364 ±0) + s * (223 ±0)`
		//  Estimated: `270392 + n * (2588 ±1) + s * (976 ±0)`
		// Minimum execution time: 1_515_189_000 picoseconds.
		Weight::from_parts(1_530_129_000, 0)
			.saturating_add(Weight::from_parts(0, 270392))
			// Standard Error: 276_675
			.saturating_add(Weight::from_parts(13_099_157, 0).saturating_mul(n.into()))
			// Standard Error: 276_930
			.saturating_add(Weight::from_parts(9_665_276, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(s.into())))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(s.into())))
			.saturating_add(Weight::from_parts(0, 2588).saturating_mul(n.into()))
			.saturating_add(Weight::from_parts(0, 976).saturating_mul(s.into()))
	}
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainChainRewards` (r:1 w:0)
	/// Proof: `Domains::DomainChainRewards` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:100 w:100)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:100 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 100]`.
	fn operator_reward_tax_and_restake(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `430 + n * (208 ±0)`
		//  Estimated: `3895 + n * (2683 ±0)`
		// Minimum execution time: 27_550_000 picoseconds.
		Weight::from_parts(39_339_614, 0)
			.saturating_add(Weight::from_parts(0, 3895))
			// Standard Error: 17_289
			.saturating_add(Weight::from_parts(5_132_722, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(1))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2683).saturating_mul(n.into()))
	}
	/// Storage: `Domains::PendingSlashes` (r:1 w:1)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Deposits` (r:11 w:10)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DepositOnHold` (r:10 w:10)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:2 w:2)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:11 w:0)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:10 w:10)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:12 w:12)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::OperatorHighestSlot` (r:0 w:1)
	/// Proof: `Domains::OperatorHighestSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:0 w:1)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 9]`.
	fn slash_operator(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1318 + n * (341 ±0)`
		//  Estimated: `8799 + n * (2816 ±0)`
		// Minimum execution time: 174_457_000 picoseconds.
		Weight::from_parts(190_145_698, 0)
			.saturating_add(Weight::from_parts(0, 8799))
			// Standard Error: 119_520
			.saturating_add(Weight::from_parts(63_303_037, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(12))
			.saturating_add(T::DbWeight::get().writes((4_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2816).saturating_mul(n.into()))
	}
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:512 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:512 w:512)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InvalidBundleAuthors` (r:1 w:0)
	/// Proof: `Domains::InvalidBundleAuthors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeregisteredOperators` (r:1 w:0)
	/// Proof: `Domains::DeregisteredOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LastEpochStakingDistribution` (r:0 w:1)
	/// Proof: `Domains::LastEpochStakingDistribution` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:0 w:512)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `p` is `[0, 512]`.
	fn finalize_domain_epoch_staking(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108006`
		//  Estimated: `1376196`
		// Minimum execution time: 3_268_603_000 picoseconds.
		Weight::from_parts(3_423_572_943, 0)
			.saturating_add(Weight::from_parts(0, 1376196))
			// Standard Error: 7_637
			.saturating_add(Weight::from_parts(2_414_875, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1027))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(p.into())))
	}
	/// Storage: `Domains::NextRuntimeId` (r:1 w:1)
	/// Proof: `Domains::NextRuntimeId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::RuntimeRegistry` (r:0 w:1)
	/// Proof: `Domains::RuntimeRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_domain_runtime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `1485`
		// Minimum execution time: 20_835_157_000 picoseconds.
		Weight::from_parts(21_172_400_000, 0)
			.saturating_add(Weight::from_parts(0, 1485))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Domains::RuntimeRegistry` (r:1 w:0)
	/// Proof: `Domains::RuntimeRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ScheduledRuntimeUpgrades` (r:1 w:1)
	/// Proof: `Domains::ScheduledRuntimeUpgrades` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn upgrade_domain_runtime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2481066`
		//  Estimated: `2484531`
		// Minimum execution time: 22_396_245_000 picoseconds.
		Weight::from_parts(23_095_170_000, 0)
			.saturating_add(Weight::from_parts(0, 2484531))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Domains::PermissionedActionAllowedBy` (r:1 w:0)
	/// Proof: `Domains::PermissionedActionAllowedBy` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::RuntimeRegistry` (r:1 w:1)
	/// Proof: `Domains::RuntimeRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::NextDomainId` (r:1 w:1)
	/// Proof: `Domains::NextDomainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::NextEVMChainId` (r:1 w:1)
	/// Proof: `Domains::NextEVMChainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::DomainBalances` (r:1 w:1)
	/// Proof: `Transporter::DomainBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DomainSudoCalls` (r:0 w:1)
	/// Proof: `Domains::DomainSudoCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:0 w:1)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTreeNodes` (r:0 w:1)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:0 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:0 w:1)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainGenesisBlockExecutionReceipt` (r:0 w:1)
	/// Proof: `Domains::DomainGenesisBlockExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:0 w:1)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::DomainChainAllowlistUpdate` (r:0 w:1)
	/// Proof: `Messenger::DomainChainAllowlistUpdate` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn instantiate_domain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2481138`
		//  Estimated: `2484603`
		// Minimum execution time: 6_316_059_000 picoseconds.
		Weight::from_parts(6_443_076_000, 0)
			.saturating_add(Weight::from_parts(0, 2484603))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(14))
	}
	/// Storage: `Domains::PendingStakingOperationCount` (r:1 w:1)
	/// Proof: `Domains::PendingStakingOperationCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::NextOperatorId` (r:1 w:1)
	/// Proof: `Domains::NextOperatorId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DepositOnHold` (r:1 w:1)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainChainRewards` (r:1 w:0)
	/// Proof: `Domains::DomainChainRewards` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InvalidBundleAuthors` (r:1 w:0)
	/// Proof: `Domains::InvalidBundleAuthors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DeregisteredOperators` (r:1 w:0)
	/// Proof: `Domains::DeregisteredOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:0 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LastEpochStakingDistribution` (r:0 w:1)
	/// Proof: `Domains::LastEpochStakingDistribution` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:0 w:1)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:0 w:1)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `663`
		//  Estimated: `6196`
		// Minimum execution time: 153_527_000 picoseconds.
		Weight::from_parts(158_416_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().writes(12))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingStakingOperationCount` (r:1 w:1)
	/// Proof: `Domains::PendingStakingOperationCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DepositOnHold` (r:1 w:1)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:1 w:0)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn nominate_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1227`
		//  Estimated: `6196`
		// Minimum execution time: 132_677_000 picoseconds.
		Weight::from_parts(138_077_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `Domains::OperatorIdOwner` (r:1 w:0)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::StakingWithdrawalPeriod` (r:1 w:0)
	/// Proof: `RuntimeConfigs::StakingWithdrawalPeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Domains::DeregisteredOperators` (r:1 w:1)
	/// Proof: `Domains::DeregisteredOperators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deregister_operator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `677`
		//  Estimated: `4142`
		// Minimum execution time: 42_429_000 picoseconds.
		Weight::from_parts(45_529_000, 0)
			.saturating_add(Weight::from_parts(0, 4142))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingStakingOperationCount` (r:1 w:1)
	/// Proof: `Domains::PendingStakingOperationCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:1 w:0)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:1 w:1)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:1 w:0)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::StakingWithdrawalPeriod` (r:1 w:0)
	/// Proof: `RuntimeConfigs::StakingWithdrawalPeriod` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn withdraw_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1421`
		//  Estimated: `6196`
		// Minimum execution time: 117_927_000 picoseconds.
		Weight::from_parts(121_408_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `Domains::Operators` (r:1 w:0)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:1 w:1)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DepositOnHold` (r:1 w:1)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::Deposits` (r:1 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `w` is `[1, 32]`.
	fn unlock_funds(w: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1157 + w * (36 ±0)`
		//  Estimated: `4622 + w * (36 ±0)`
		// Minimum execution time: 103_058_000 picoseconds.
		Weight::from_parts(114_155_578, 0)
			.saturating_add(Weight::from_parts(0, 4622))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(5))
			.saturating_add(Weight::from_parts(0, 36).saturating_mul(w.into()))
	}
	/// Storage: `Domains::Operators` (r:1 w:1)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Domains::Deposits` (r:2 w:1)
	/// Proof: `Domains::Deposits` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorEpochSharePrice` (r:1 w:1)
	/// Proof: `Domains::OperatorEpochSharePrice` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Withdrawals` (r:2 w:0)
	/// Proof: `Domains::Withdrawals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DepositOnHold` (r:1 w:1)
	/// Proof: `Domains::DepositOnHold` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Domains::OperatorHighestSlot` (r:0 w:1)
	/// Proof: `Domains::OperatorHighestSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorIdOwner` (r:0 w:1)
	/// Proof: `Domains::OperatorIdOwner` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn unlock_nominator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1328`
		//  Estimated: `8799`
		// Minimum execution time: 186_986_000 picoseconds.
		Weight::from_parts(191_586_000, 0)
			.saturating_add(Weight::from_parts(0, 8799))
			.saturating_add(T::DbWeight::get().reads(14))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: `Domains::DomainRegistry` (r:1 w:1)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn update_domain_operator_allow_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `492`
		//  Estimated: `3957`
		// Minimum execution time: 27_319_000 picoseconds.
		Weight::from_parts(30_640_000, 0)
			.saturating_add(Weight::from_parts(0, 3957))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn transfer_treasury_funds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `52`
		//  Estimated: `6196`
		// Minimum execution time: 37_319_000 picoseconds.
		Weight::from_parts(37_929_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:1)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::NewAddedHeadReceipt` (r:1 w:1)
	/// Proof: `Domains::NewAddedHeadReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:0)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ExecutionInbox` (r:1 w:0)
	/// Proof: `Domains::ExecutionInbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PendingSlashes` (r:1 w:0)
	/// Proof: `Domains::PendingSlashes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::InvalidBundleAuthors` (r:1 w:1)
	/// Proof: `Domains::InvalidBundleAuthors` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:1)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:1 w:1)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::DomainBlockPruningDepth` (r:1 w:0)
	/// Proof: `RuntimeConfigs::DomainBlockPruningDepth` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:1)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTreeNodes` (r:0 w:1)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn submit_receipt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `752`
		//  Estimated: `4217`
		// Minimum execution time: 60_879_000 picoseconds.
		Weight::from_parts(63_919_000, 0)
			.saturating_add(Weight::from_parts(0, 4217))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `Domains::PreviousBundleAndExecutionReceiptVersions` (r:1 w:0)
	/// Proof: `Domains::PreviousBundleAndExecutionReceiptVersions` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ExecutionInbox` (r:2 w:0)
	/// Proof: `Domains::ExecutionInbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRuntimeUpgradeRecords` (r:1 w:0)
	/// Proof: `Domains::DomainRuntimeUpgradeRecords` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:0)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::FrozenDomains` (r:1 w:0)
	/// Proof: `Domains::FrozenDomains` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:0)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorHighestSlot` (r:1 w:0)
	/// Proof: `Domains::OperatorHighestSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorBundleSlot` (r:1 w:0)
	/// Proof: `Domains::OperatorBundleSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LastEpochStakingDistribution` (r:1 w:0)
	/// Proof: `Domains::LastEpochStakingDistribution` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Subspace::BlockSlots` (r:1 w:0)
	/// Proof: `Subspace::BlockSlots` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::BlockHash` (r:1 w:0)
	/// Proof: `System::BlockHash` (`max_values`: None, `max_size`: Some(44), added: 2519, mode: `MaxEncodedLen`)
	/// Storage: `Domains::NewAddedHeadReceipt` (r:1 w:0)
	/// Proof: `Domains::NewAddedHeadReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:0)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ConsensusBlockHash` (r:1 w:0)
	/// Proof: `Domains::ConsensusBlockHash` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:1 w:0)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::EnableDynamicCostOfStorage` (r:1 w:0)
	/// Proof: `RuntimeConfigs::EnableDynamicCostOfStorage` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `TransactionFees::CollectedBlockFees` (r:1 w:1)
	/// Proof: `TransactionFees::CollectedBlockFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn validate_submit_bundle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1416`
		//  Estimated: `7356`
		// Minimum execution time: 603_228_000 picoseconds.
		Weight::from_parts(610_887_000, 0)
			.saturating_add(Weight::from_parts(0, 7356))
			.saturating_add(T::DbWeight::get().reads(23))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadDomainNumber` (r:1 w:0)
	/// Proof: `Domains::HeadDomainNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ExecutionInbox` (r:2 w:0)
	/// Proof: `Domains::ExecutionInbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRuntimeUpgradeRecords` (r:1 w:0)
	/// Proof: `Domains::DomainRuntimeUpgradeRecords` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:0)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::PreviousBundleAndExecutionReceiptVersions` (r:1 w:0)
	/// Proof: `Domains::PreviousBundleAndExecutionReceiptVersions` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::FrozenDomains` (r:1 w:0)
	/// Proof: `Domains::FrozenDomains` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::Operators` (r:1 w:0)
	/// Proof: `Domains::Operators` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestSubmittedER` (r:1 w:0)
	/// Proof: `Domains::LatestSubmittedER` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorHighestSlot` (r:1 w:0)
	/// Proof: `Domains::OperatorHighestSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::OperatorBundleSlot` (r:1 w:0)
	/// Proof: `Domains::OperatorBundleSlot` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LastEpochStakingDistribution` (r:1 w:0)
	/// Proof: `Domains::LastEpochStakingDistribution` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainStakingSummary` (r:1 w:0)
	/// Proof: `Domains::DomainStakingSummary` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Subspace::BlockSlots` (r:1 w:0)
	/// Proof: `Subspace::BlockSlots` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::BlockHash` (r:1 w:0)
	/// Proof: `System::BlockHash` (`max_values`: None, `max_size`: Some(44), added: 2519, mode: `MaxEncodedLen`)
	/// Storage: `Domains::NewAddedHeadReceipt` (r:1 w:0)
	/// Proof: `Domains::NewAddedHeadReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:0)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::ConsensusBlockHash` (r:1 w:0)
	/// Proof: `Domains::ConsensusBlockHash` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::BlockTree` (r:1 w:0)
	/// Proof: `Domains::BlockTree` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `RuntimeConfigs::EnableDynamicCostOfStorage` (r:1 w:0)
	/// Proof: `RuntimeConfigs::EnableDynamicCostOfStorage` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `TransactionFees::CollectedBlockFees` (r:1 w:1)
	/// Proof: `TransactionFees::CollectedBlockFees` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn validate_singleton_receipt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1446`
		//  Estimated: `7386`
		// Minimum execution time: 606_737_000 picoseconds.
		Weight::from_parts(614_167_000, 0)
			.saturating_add(Weight::from_parts(0, 7386))
			.saturating_add(T::DbWeight::get().reads(23))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Domains::BlockTreeNodes` (r:2 w:0)
	/// Proof: `Domains::BlockTreeNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::HeadReceiptNumber` (r:1 w:0)
	/// Proof: `Domains::HeadReceiptNumber` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::DomainRegistry` (r:1 w:0)
	/// Proof: `Domains::DomainRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::RuntimeRegistry` (r:1 w:0)
	/// Proof: `Domains::RuntimeRegistry` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Domains::LatestConfirmedDomainExecutionReceipt` (r:1 w:0)
	/// Proof: `Domains::LatestConfirmedDomainExecutionReceipt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn fraud_proof_pre_check() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2483083`
		//  Estimated: `2489023`
		// Minimum execution time: 1_322_042_000 picoseconds.
		Weight::from_parts(1_374_212_000, 0)
			.saturating_add(Weight::from_parts(0, 2489023))
			.saturating_add(T::DbWeight::get().reads(6))
	}
}
