
//! Autogenerated weights for `pallet_messenger`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 46.2.0
//! DATE: 2025-06-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `protocol-team-testing`, CPU: `AMD Ryzen 5 3600 6-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/subspace-node
// domain
// benchmark
// pallet
// --runtime=./target/release/wbuild/auto-id-domain-runtime/auto_id_domain_runtime.compact.compressed.wasm
// --genesis-builder=none
// --steps=50
// --repeat=20
// --pallet=pallet_messenger
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./domains/runtime/auto-id/src/weights-tmp/pallet_messenger.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_messenger`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_messenger::WeightInfo for WeightInfo<T> {
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `SelfDomainId::SelfDomainId` (r:1 w:0)
	/// Proof: `SelfDomainId::SelfDomainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::ChainAllowlist` (r:1 w:0)
	/// Proof: `Messenger::ChainAllowlist` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::NextChannelId` (r:1 w:1)
	/// Proof: `Messenger::NextChannelId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxMessageCount` (r:1 w:1)
	/// Proof: `Messenger::OutboxMessageCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxMessageWeightTags` (r:0 w:1)
	/// Proof: `Messenger::OutboxMessageWeightTags` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::Outbox` (r:0 w:1)
	/// Proof: `Messenger::Outbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::Channels` (r:0 w:1)
	/// Proof: `Messenger::Channels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn initiate_channel() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `62`
		//  Estimated: `3599`
		// Minimum execution time: 82_648_000 picoseconds.
		Weight::from_parts(83_968_000, 0)
			.saturating_add(Weight::from_parts(0, 3599))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: `Messenger::Channels` (r:1 w:1)
	/// Proof: `Messenger::Channels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `SelfDomainId::SelfDomainId` (r:1 w:0)
	/// Proof: `SelfDomainId::SelfDomainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxMessageCount` (r:1 w:1)
	/// Proof: `Messenger::OutboxMessageCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxMessageWeightTags` (r:0 w:1)
	/// Proof: `Messenger::OutboxMessageWeightTags` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::Outbox` (r:0 w:1)
	/// Proof: `Messenger::Outbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn close_channel() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `227`
		//  Estimated: `3692`
		// Minimum execution time: 34_289_000 picoseconds.
		Weight::from_parts(34_819_000, 0)
			.saturating_add(Weight::from_parts(0, 3692))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Messenger::Channels` (r:1 w:1)
	/// Proof: `Messenger::Channels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn do_open_channel() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `227`
		//  Estimated: `3692`
		// Minimum execution time: 12_910_000 picoseconds.
		Weight::from_parts(13_210_000, 0)
			.saturating_add(Weight::from_parts(0, 3692))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Messenger::Channels` (r:1 w:1)
	/// Proof: `Messenger::Channels` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn do_close_channel() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `227`
		//  Estimated: `3692`
		// Minimum execution time: 12_809_000 picoseconds.
		Weight::from_parts(13_040_000, 0)
			.saturating_add(Weight::from_parts(0, 3692))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Messenger::Inbox` (r:1 w:1)
	/// Proof: `Messenger::Inbox` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::InboxFeesOnHoldStartAt` (r:1 w:1)
	/// Proof: `Messenger::InboxFeesOnHoldStartAt` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::InboxFeesOnHold` (r:1 w:1)
	/// Proof: `Messenger::InboxFeesOnHold` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `SelfDomainId::SelfDomainId` (r:1 w:0)
	/// Proof: `SelfDomainId::SelfDomainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Transporter::ChainTransfers` (r:1 w:1)
	/// Proof: `Transporter::ChainTransfers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::UpdatedChannels` (r:1 w:1)
	/// Proof: `Messenger::UpdatedChannels` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::InboxFee` (r:0 w:1)
	/// Proof: `Messenger::InboxFee` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::InboxResponses` (r:0 w:1)
	/// Proof: `Messenger::InboxResponses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::InboxResponseMessageWeightTags` (r:0 w:1)
	/// Proof: `Messenger::InboxResponseMessageWeightTags` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn relay_message() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `236`
		//  Estimated: `3701`
		// Minimum execution time: 35_189_000 picoseconds.
		Weight::from_parts(35_859_000, 0)
			.saturating_add(Weight::from_parts(0, 3701))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: `Messenger::OutboxResponses` (r:1 w:1)
	/// Proof: `Messenger::OutboxResponses` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::Outbox` (r:1 w:1)
	/// Proof: `Messenger::Outbox` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxMessageCount` (r:1 w:1)
	/// Proof: `Messenger::OutboxMessageCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxFee` (r:1 w:0)
	/// Proof: `Messenger::OutboxFee` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::UpdatedChannels` (r:1 w:1)
	/// Proof: `Messenger::UpdatedChannels` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Messenger::OutboxMessageWeightTags` (r:0 w:1)
	/// Proof: `Messenger::OutboxMessageWeightTags` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::EventSegments` (r:0 w:1)
	/// Proof: `System::EventSegments` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn relay_message_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `472`
		//  Estimated: `3937`
		// Minimum execution time: 32_659_000 picoseconds.
		Weight::from_parts(33_370_000, 0)
			.saturating_add(Weight::from_parts(0, 3937))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(6))
	}
}
